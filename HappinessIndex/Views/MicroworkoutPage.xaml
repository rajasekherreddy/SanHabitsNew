<?xml version="1.0" encoding="UTF-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
                 xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                 BackgroundColor="{DynamicResource BackgroundColor}"
                 xmlns:ios="clr-namespace:Xamarin.Forms.PlatformConfiguration.iOSSpecific;assembly=Xamarin.Forms.Core"
                 ios:Page.UseSafeArea="True"
                 Title="{x:Static resource:AppResources.MicroWorkoutsSetup}"
                 xmlns:resource="clr-namespace:HappinessIndex.Resx"
                 xmlns:ffimageloading="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
                 xmlns:behavior="clr-namespace:HappinessIndex.Behaviors"
                 xmlns:viewModel="clr-namespace:HappinessIndex.ViewModels"
                  xmlns:controls="clr-namespace:HappinessIndex.Controls"
                 x:Class="HappinessIndex.Views.MicroworkoutPage">

    <ContentPage.Resources>
        <ResourceDictionary>
            <Style TargetType="Label">
                <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
            </Style>
             <Style TargetType="Entry">
                <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
            </Style>

        </ResourceDictionary>

    </ContentPage.Resources>

    <ContentPage.BindingContext>
        <viewModel:MicroWorkoutPageViewModel/>
    </ContentPage.BindingContext>

    <ContentPage.Behaviors>
        <behavior:EventToCommandBehavior
                EventName="Appearing"
                Command="{Binding RefreshCommand}"/>
    </ContentPage.Behaviors>

    <ContentPage.ToolbarItems>
        <ToolbarItem Text="HOME" Order="Secondary" Command="{Binding HomeCommand}"/>
        <ToolbarItem Text="Add" Order="Primary" Command="{Binding AddFactorCommand}"/>
    </ContentPage.ToolbarItems>

    

    <Grid Padding="{StaticResource DefaultPagePadding}" RowSpacing="7">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <!--<Button Style="{StaticResource BackButton}" ImageSource="Back.png"/>-->

        <Label HorizontalOptions="CenterAndExpand"
                   Grid.ColumnSpan="2"
                   FontAttributes="Bold"
                   TextColor="{StaticResource TransparentButtonText}"
                   Text="{x:Static resource:AppResources.SelectDefaultMicroWorkouts}"/>

        <Label Grid.Row="1"
                   FontAttributes="Bold"
                   TextColor="{StaticResource TransparentButtonText}"
                   Text="{Binding EditDate}"
                   HorizontalOptions="EndAndExpand"/>

        <ScrollView  Grid.Row="2" Margin="0,10"
                            Grid.ColumnSpan="2">
            <StackLayout BindableLayout.ItemsSource="{Binding MicroWorkoutList}"
                            x:Name="List">
                <BindableLayout.ItemTemplate>
                    <DataTemplate>
                        <Frame HasShadow="False" BorderColor="LightGray" Padding="8" BackgroundColor="{DynamicResource BackgroundColor}">
                            <Expander>
                                <Expander.Header>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="70"/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <ffimageloading:CachedImage Source="{Binding WorkoutIcon}" HeightRequest="70" Margin="0,0,15,0"/>

                                        <StackLayout Grid.Column="1" VerticalOptions="CenterAndExpand" Orientation="Vertical">
                                            <Label Text="{Binding Name}"
                                       VerticalOptions="Center"/>
                                            <!-- <Label Text="{Binding DisplayDescription}"
                                       VerticalOptions="Start"
                                       FontSize="{StaticResource NoteFontSize}"/>-->
                                        </StackLayout>

                                        <Switch Grid.Column="2"
                                        VerticalOptions="Center"
                                        IsToggled="{Binding IsSelected}"
                                        OnColor="{StaticResource BackgroundDarkColor}">
                                            <Switch.Behaviors>
                                                <behavior:EventToCommandBehavior
                                                EventName="Toggled"
                                                Command="{Binding Source={x:Reference List}, Path=BindingContext.ValidateFactorsCommand}"
                                            CommandParameter="{Binding ID}"/>
                                            </Switch.Behaviors>
                                        </Switch>

                                        <ffimageloading:CachedImage Grid.Column="3" Source="Edit"
                                                                    HeightRequest="18"
                                           WidthRequest="18" Margin="10,0,0,0" HorizontalOptions="End"  >
                                            <ffimageloading:CachedImage.GestureRecognizers>
                                                <TapGestureRecognizer Command="{Binding Source={x:Reference List}, Path=BindingContext.EditCommand}" CommandParameter="{Binding ID}" />
                                            </ffimageloading:CachedImage.GestureRecognizers>
                                        </ffimageloading:CachedImage>

                                        <Image Source="Arrow.png"
                                           HeightRequest="30"
                                           WidthRequest="30"
                                           Margin="10,0,0,0"
                                           Grid.Column="4"
                                           HorizontalOptions="End"
                                           VerticalOptions="Center">
                                            <Image.Triggers>
                                                <DataTrigger TargetType="Image"
                                                Binding="{Binding Source={RelativeSource AncestorType={x:Type Expander}}, Path=IsExpanded}"
                                                Value="True">
                                                    <Setter Property="Rotation"
                                                    Value="180" />
                                                </DataTrigger>
                                            </Image.Triggers>
                                        </Image>

                                    </Grid>
                                </Expander.Header>

                                <Expander.ContentTemplate>
                                    <DataTemplate>
                                        <Grid HorizontalOptions="FillAndExpand"
                                          BackgroundColor="{StaticResource BackgroundColor}">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                 <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>

                                            <Label Grid.Row="0" Text="{x:Static resource:AppResources.MicroWorkoutName}"/>
                                            <Entry Grid.Row="1" Text="{Binding Name}" IsEnabled="{Binding AllowEdit}"/>

                                            <Label Grid.Row="2" Text="{x:Static resource:AppResources.MicroWorkoutDescription}" Margin="0,15,0,0"/>
                                            <Entry Grid.Row="3" Text="{Binding Description}" IsEnabled="{Binding AllowEdit}" />

                                            <Label Grid.Row="4" Text="{x:Static resource:AppResources.YoutubeLink}" Margin="0,15,0,0"/>
                                            <Entry Grid.Row="5" Text="{Binding YoutubeLink}" IsEnabled="{Binding AllowEdit}" />

                                            <StackLayout Grid.Row="6" Orientation="Horizontal" Padding="0" Margin="0,15,0,0" IsEnabled="{Binding AllowEdit}">
                                                <Label Text="Number of sets:" HorizontalOptions="Start" VerticalOptions="CenterAndExpand"/>
                                                <Picker Title="sets" HorizontalOptions="Start" VerticalOptions="CenterAndExpand" ItemsSource="{Binding Source={x:Reference List}, Path=BindingContext.DurationPickerMinutes}" SelectedItem="{Binding NoOfSets}" />
                                                
                                            </StackLayout>

                                            <StackLayout Grid.Row="7" Orientation="Horizontal" Padding="0" Margin="0,15,0,0" IsEnabled="{Binding AllowEdit}">
                                                <Label Text="Workout  Duration(Min:Sec):" HorizontalOptions="Start" VerticalOptions="CenterAndExpand"/>
                                                <Picker Title="Min" HorizontalOptions="Start" VerticalOptions="CenterAndExpand" ItemsSource="{Binding Source={x:Reference List}, Path=BindingContext.DurationPickerMinutes}" SelectedItem="{Binding WorkoutDurationMin}" />
                                                <Picker Title="Sec"  HorizontalOptions="Start" VerticalOptions="CenterAndExpand" ItemsSource="{Binding Source={x:Reference List}, Path=BindingContext.DurationPickerSeconds}" SelectedItem="{Binding WorkoutDurationSec}" />
                                            </StackLayout>

                                            <StackLayout Grid.Row="8" Orientation="Horizontal" Padding="0" Margin="0,15,0,0" IsEnabled="{Binding AllowEdit}">
                                                <Label Text="break  Duration(Min:Sec):" HorizontalOptions="Start" VerticalOptions="CenterAndExpand"/>
                                                <Picker Title="Min" HorizontalOptions="Start" VerticalOptions="CenterAndExpand" ItemsSource="{Binding Source={x:Reference List}, Path=BindingContext.DurationPickerMinutes}" SelectedItem="{Binding BreakDurationMin}" />
                                                <Picker Title="Sec"  HorizontalOptions="Start" VerticalOptions="CenterAndExpand" ItemsSource="{Binding Source={x:Reference List}, Path=BindingContext.DurationPickerSeconds}" SelectedItem="{Binding BreakDurationSec}" />
                                            </StackLayout>


                                            <StackLayout Grid.Row="9" Orientation="Horizontal" Padding="0" HorizontalOptions="FillAndExpand" IsEnabled="{Binding AllowEdit}">
                                                <CheckBox WidthRequest="30" HeightRequest="25" />
                                                <Label Text="{x:Static resource:AppResources.Reminders}"
                                                    FontAttributes="Bold"
                                                    VerticalOptions="Center" />
                                                <controls:BorderlessTimePicker
                                                    x:Name="Reminder"
                                                    Margin="0,0,15,0"
                                                    HorizontalOptions="EndAndExpand"
                                                    Time="{Binding WorkoutReminder}"/>
                                            </StackLayout>

                                            <Button Grid.Row="10" BackgroundColor="{StaticResource TransparentButtonText}"
                                                    HorizontalOptions="End"
                                                    Command="{Binding Source={x:Reference List}, Path=BindingContext.ShareCommand}"
                                                    CommandParameter="{Binding ID}"
                                                    Text="SHARE"/>
                                        </Grid>
                                     
                                    </DataTemplate>
                                </Expander.ContentTemplate>

                            </Expander>
                        </Frame>
                    </DataTemplate>
                </BindableLayout.ItemTemplate>

            </StackLayout>
        </ScrollView>

        <Button Text="{x:Static resource:AppResources.Save}"
                    Grid.Row="3"
                    Command="{Binding SaveCommand}"
                    Clicked="Button_Clicked"
                    HorizontalOptions="FillAndExpand"
                    VerticalOptions="Center"
                    Margin="30,0,30,10"/>

        <ActivityIndicator IsVisible="{Binding IsBusy}" IsRunning="{Binding IsBusy}"
                                   VerticalOptions="Center"
                                   HorizontalOptions="Center" Grid.ColumnSpan="2" Grid.RowSpan="3"/>

    </Grid>
</ContentPage>
